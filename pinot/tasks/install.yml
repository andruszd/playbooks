# Update OS configuration files

# FIXME: hosts file is not updated. Need to fix this.
#  hostname
# - name: Updating /etc/hosts File on All Cluster Nodes
#   template:
#         src: "templates/hosts.j2"
#         dest: "/etc/hosts"
#         force: true
#         owner: root
#         group: root
#         mode: u=rw,g=r,o=r
#         backup: true

- name: Set up bash_rc
  blockinfile:
    path: /root/.bashrc
    create: yes
    backup: true
    block: |
       shopt -s histappend histreedit histverify
       shopt -s no_empty_cmd_completion
       export HISTCONTROL=ignoreboth:erasedups
       export HISTTIMEFORMAT="%Y-%m-%d:%T:-> "
       export HISTIGNORE="pwd:bg:fg:history"
       export HISTFILE=$HOME/.bash_history
       export HISTFILESIZE=1000000000
       export HISTSIZE=10000000

- name: Source the bashrc file
  shell: source /root/.bashrc

# Create Directory Structure
- name: create pinot config directory
  file:
    path: /etc/pinot/
    state: directory
    owner: "{{ pinot_user }}"
    group: "{{ pinot_group }}"
    mode: u=rwx,g=rx,o=rx
  become: true

- name: create zookeeper config directory
  file:
    path: /etc/zookeeper/
    state: directory
    owner: "{{ zookeeper_user }}"
    group: "{{ zookeeper_group }}"
    mode: u=rwx,g=rx,o=rx
  become: true

- name: create zookeeper directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ zookeeper_user }}"
    group: "{{ zookeeper_group }}"
    mode: u=rwx,g=rx,o=rx
  become: true
  with_items:
  - "{{ zookeeper_data_dir }}"
  - "{{ zookeeper_data_log_dir }}"
  - "{{ zookeeper_log_dir }}"
  - "{{ zookeeper_pid_dir }}"
  when: zookeeper_user is defined and zookeeper_group is defined

# Setup Appliacation Enviroment Files
- name: Create Hadoop Node Zookeeper myid
  file:
    path: "{{ zookeeper_myid_file }}"
    state: touch
    owner: "{{ zookeeper_user }}"
    group: "{{ zookeeper_group }}"
    mode: u=rw,g=r,o=r
  become: true
  when: zookeeper_user is defined and zookeeper_group is defined

- name: Set up java.sh in /etc/profile.d/
  template:
    src: "files/java.sh"
    dest: "/etc/profile.d/java.sh"
    owner: root
    group: root
    mode: u=rw,g=r,o=r
    backup: true

- name: Set up hadoop.sh in /etc/profile.d
  template:
    src: "files/pinot.sh"
    dest: "/etc/profile.d/pinot.sh"
    owner: root
    group: root
    mode: u=rw,g=r,o=r
    backup: true

- name: Set up zookeeper.sh in /etc/profile.d
  template:
    src: "files/zookeeper.sh"
    dest: "/etc/profile.d/zookeeper.sh"
    owner: root
    group: root
    mode: u=rw,g=r,o=r
    backup: true

# Upload Generic Configuration Files.
- name: Set up config files
  template:
    src: files/core-site.xml
    dest: "{{ hadoop_conf_dir }}/core-site.xml"
    owner: pinot
    group: pinot
    mode: u=rw,g=r,o=r
    backup: true

# Genric Configuration Files for OS
- name: setup firewall ports
  template:
    src: "files/pinot.xml"
    dest: "/usr/lib/firewalld/services"
    owner: root
    group: root
    mode: u=rw,g=r,o=r
    backup: true

- name: restart firewalld
  service:
    name: firewalld
    state: restarted
    enabled: true

- name: add hadoop service to firewalld
  firewalld:
    service: pinot
    permanent: true
    state: enabled
    immediate: true

- name: add kerberos service to firewalld
  firewalld:
    service: kerberos
    permanent: true
    state: enabled
    immediate: true
# After installation clean the RAM so that we get the required free space
# so that name node can start/stop without any issues.
- name: Clean Ram Cache
  copy:
    content: 3
    dest: /proc/sys/vm/drop_caches
    unsafe_writes: true
  become: true
